Metadata-Version: 2.1
Name: pylim
Version: 1.5
Summary: Useful functions, tools and metadata used at the Leipzig Institute for Meteorology
Author: Hanno Müller, André Ehrlich
Author-email: Johannes Röttenbacher <johannes.roettenbacher@uni-leipzig.de>
License: MIT License
        
        Copyright (c) 2023 - Leipzig Institute for Meteorology - Radiation working group
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
Project-URL: GitHub, https://github.com/radiation-lim/LIM-pylim
Project-URL: Documentation, https://radiation-lim.github.io/LIM-pylim/
Keywords: meteorology,Leipzig,tools
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: pandas
Requires-Dist: numpy
Requires-Dist: toml
Requires-Dist: matplotlib
Requires-Dist: scipy
Requires-Dist: xarray
Requires-Dist: tqdm
Requires-Dist: joblib
Requires-Dist: pysolar
Requires-Dist: geopy
Requires-Dist: cmasher
Requires-Dist: importlib_resources
Requires-Dist: cartopy
Requires-Dist: holoviews
Provides-Extra: dev
Requires-Dist: bumpver; extra == "dev"
Requires-Dist: isort; extra == "dev"
Requires-Dist: pip-tools; extra == "dev"
Requires-Dist: pytest; extra == "dev"
Requires-Dist: sphinx; extra == "dev"
Requires-Dist: sphinx_rtd_theme; extra == "dev"
Requires-Dist: sphinxcontrib.bibtex; extra == "dev"
Requires-Dist: sphinx-copybutton; extra == "dev"

# LIM-pylim


A python package bundling processing functions and tools for the atmospheric radiation working group at the Leipzig Institute for Meteorology, Germany.

Documentation: https://radiation-lim.github.io/LIM-pylim/

# Installation instructions:

## Installing and using pylim from GitHub
If you only want to use the functions available and install pylim like a normal python package this is all you need to do:

1. On your machine open a terminal
2. Activate the [conda environment](https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html) you want to install pylim to
	`conda activate environment_name`
3. Install pylim from GitHub
```bash
python -m pip install git+https://github.com/radiation-lim/LIM-pylim.git
```

## Contributing to pylim from within the group

1. Get a GitHub Account and get added to the organization 
2. Download [GitHub Desktop](https://desktop.github.com/)
3. On GitHub click the green Code button and click Open in GitHub Desktop
4. Select where you want to save the repository (e.g. .../PyCharmProjects/LIM-pylim)
5. In GitHub Desktop go to File/Options and under Accounts sign in to GitHub

Under current branch create a new branch (e.g. jr-dev). The new branch will now be checked out and all changes happen on this branch.
You can publish the branch to GitHub now.

To immediately make use of changes you introduce to pylim you need to install in editable mode (-e) in your conda environment. Make sure you have your development branch checked out!

1. Activate your environment: `conda activate environment_name`
2. Install your pylim version in editable mode:
```bash
python -m pip install -e <path>
```
`<path>` is the same path that you used to save the repository to (see step 4. above)

All changes in pylim are now available with a simple restart of your python console. No need to reinstall pylim each time you change something.
